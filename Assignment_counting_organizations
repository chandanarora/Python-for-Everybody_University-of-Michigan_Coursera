Counting Organizations
This application will read the mailbox data (mbox.txt) and count the number of email messages per organization (i.e. domain name of the email address) using a database with the following schema to maintain the counts.

CREATE TABLE Counts (org TEXT, count INTEGER)
When you have run the program on mbox.txt upload the resulting database file above for grading.
If you run the program multiple times in testing or with dfferent files, make sure to empty out the data before each run.

The program can be speeded up greatly by moving the commit operation outside of the loop. In any database program, there is a balance between the number of operations you execute between commits and the importance of not losing the results of operations that have not yet been committed.


#Here is my Code

import sqlite3
conn = sqlite3.connect('emailcount.sqlite')
cur=conn.cursor()

cur.execute('DROP TABLE IF EXISTS Counts')

cur.execute('''
CREATE TABLE Counts(org TEXT, count INTEGER)''')

fname = input('Enter file name: ')
if(len(fname)<1): fname = 'mbox.txt'

fh=open(fname)

for line in fh:
    if not line.startswith('From: '): continue
    pieces=line.split()
    email=pieces[1]
    emailsplit=email.split('@')
    org=emailsplit[1]

    cur.execute('SELECT  count from Counts where org = ?', (org,))
    row = cur.fetchone()
    if row is None:
        cur.execute('''INSERT INTO Counts(org, count) VALUES (?, 1)''', (org,))
    else:
        cur.execute('UPDATE Counts SET count=count +1 where org=?', (org,))
    conn.commit()

sqlstr='SELECT org, count FROM Counts  order by count DESC'

for row in cur.execute(sqlstr):
    print(row[0], row[1])

cur.close()
